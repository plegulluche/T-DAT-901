version: '3'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LOG_RETENTION_MS: 1814400000 # adjust this param in prod to 6048000 we keep 3 weeks in dev for saving api call an message retention.
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
      JVM_OPTS: "-Xms32M -Xmx64M"
      SERVER_SERVLET_CONTEXTPATH: "/"
  api_crypto_producer:
    build:
      context: ./Projet/Producer/api_crypto_producer
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      FLASK_APP: app
      FLASK_ENV: development
    volumes:
      - ./Projet/Producer/api_crypto_producer:/usr/src/app
    depends_on:
      - kafka
    env_file:
      - ./Projet/Producer/api_crypto_producer/.env
  news_crypto_producer:
    build:
      context: ./Projet/Producer/news_crypto_producer
      dockerfile: Dockerfile
    ports:
      - "6000:6000"
    depends_on:
      - kafka
  db:
    image: timescale/timescaledb:latest-pg14
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: tdatadmin
      POSTGRES_PASSWORD: tdatpassword
      POSTGRES_DB: crypto_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
  fastapi_app:
    build:
      context: ./Projet/Consummers/global_api
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      API_KEY: ${API_KEY}
      DATABASE_URL: ${DATABASE_URL_DOCKER}
      USER: ${USER}
      PASSWORD: ${PASSWORD}
      DB_NAME: ${DB_NAME}
    depends_on:
      - db
    volumes:
      - ./Projet/Consummers/global_api:/app
volumes:
  postgres_data:

